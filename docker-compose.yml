services:
  oic-model-postgis:
    image: postgis/postgis:15-3.5
    container_name: oic-model-postgis
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - oic-db-model-service:/var/lib/postgresql/data
    networks:
      - oic_service_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  oic-model-api:
    # Si no se tiene la imagen, se debe construir.
    build: 
      context: .
      dockerfile: Dockerfile
    image: oic-model-service
    container_name: oic-model-api
    depends_on:
      oic-model-postgis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PYTHONUNBUFFERED: "1"
      DATABASE_URL: ${DATABASE_URL}
    ports:
      - "8000:8000"
    volumes:
      - ./artifacts:/mini-proyecto-oic/artifacts
      - ./oic_model_server:/mini-proyecto-oic/oic_model_server
    networks:
      - oic_service_network
    command: >
      sh -c "conda run --live-stream -n oic-model-server uvicorn oic_model_server.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 2m
      timeout: 5s
      retries: 3
      start_period: 10s

  oic-ui-service:
    image: oic-model-service
    container_name: oic-ui-service
    depends_on:
      oic-model-api:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PYTHONUNBUFFERED: "1"
    ports:
      - "8501:8501"
    volumes:
      - ./streamlit_app:/mini-proyecto-oic/streamlit_app
    networks:
      - oic_service_network
    command: >
      sh -c "conda run --live-stream -n oic-model-server streamlit run streamlit_app/app.py --server.port 8501"

  oic-codeserver:
    image: oic-model-service
    container_name: oic-codeserver
    depends_on:
      oic-model-postgis:
        condition: service_healthy
    networks:
      - oic_service_network
    volumes:
      - .:/mini-proyecto-oic
    ports:
      - "8080:8080"   # Code-server
      - "8001:8000"   # API
      - "8502:8501"   # Streamlit
    command: >
      sh -c "
      mkdir -p /root/.config/code-server && \
      echo 'bind-addr: 0.0.0.0:8080'          > /root/.config/code-server/config.yaml && \
      echo 'auth: none'                      >> /root/.config/code-server/config.yaml && \
      echo 'disable-telemetry: true'         >> /root/.config/code-server/config.yaml && \
      conda run --live-stream -n oic-model-server code-server
      "

volumes:
  oic-db-model-service:

networks:
  oic_service_network:
    driver: bridge
