services:
  oic-model-postgis:
    image: postgis/postgis:15-3.5
    container_name: oic-model-postgis
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - oic-db-model-service:/var/lib/postgresql/data
    networks:
      - oic_service_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  oic-model-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: oic-model-service
    container_name: oic-model-api
    restart: always
    depends_on:
      oic-model-postgis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "8000:8000"
    networks:
      - oic_service_network
    command: >
      bash -c "source /opt/conda/etc/profile.d/conda.sh &&
             conda activate oic-model-server &&
             gunicorn oic_model_server.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --timeout 120"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  oic-ui-service:
    image: oic-model-service
    container_name: oic-ui-service
    restart: always
    depends_on:
      oic-model-api:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - API_URL=http://oic-model-api:8000
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_BROWSER_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_RUN_ON_SAVE=false
    ports:
      - "8501:8501"
    networks:
      - oic_service_network
    command: >
      bash -c "source /opt/conda/etc/profile.d/conda.sh &&
             conda activate oic-model-server &&
             streamlit run streamlit_app/app.py"

volumes:
  oic-db-model-service:
    

networks:
  oic_service_network:
    driver: bridge
    