services:
  oic-model-postgis:
    image: postgis/postgis:15-3.5
    container_name: oic-model-postgis
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - oic-db-model-service:/var/lib/postgresql/data
    networks:
      - oic_service_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  oic-model-api:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile.dev
    image: oic-model-service
    container_name: oic-model-api
    depends_on:
      oic-model-postgis:
        condition: service_healthy
    env_file:
      - ../.env
    environment:
      - PYTHONUNBUFFERED="1"
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@oic-model-postgis:5432/postgres}
    volumes:
      - ..:/mini-proyecto-oic
    ports:
      - "8000:8000"
    networks:
      - oic_service_network
    command: >
      sh -c "conda run -n oic-model-server uvicorn oic_model_server.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 40s

  oic-ui-service:
    image: oic-model-service
    container_name: oic-ui-service
    depends_on:
      oic-model-api:
        condition: service_healthy
    env_file:
      - ../.env
    environment:
      - PYTHONUNBUFFERED="1"
      - STREAMLIT_SERVER_RUN_ON_SAVE=true
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_BROWSER_SERVER_ADDRESS=0.0.0.0
    ports:
      - "8501:8501"
    volumes:
      - ..:/mini-proyecto-oic
    networks:
      - oic_service_network
    command: >
      sh -c "conda run --live-stream -n oic-model-server streamlit run streamlit_app/app.py"

volumes:
  oic-db-model-service:

networks:
  oic_service_network:
    driver: bridge